{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\DEVNUBE\\\\sports-platform\\\\Frontend\\\\admin-panel\\\\src\\\\pages\\\\GoogleCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { gapi } from 'gapi-script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '591704407107-lh3mjl4c9t9co83akvrco6v7vlguq37s.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyDmvixL1GMLpRgba_hs1FMSSArB56LMjxc';\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.events';\nfunction GoogleCalendar() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    function start() {\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        scope: SCOPES,\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\n      }).then(() => {\n        gapi.auth2.getAuthInstance().signIn().then(() => {\n          const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\n          const accessToken = googleUser.getAuthResponse().access_token;\n\n          // Enviar token al backend\n          fetch('http://localhost:3000/set-auth', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              token: accessToken\n            })\n          }).then(() => {\n            loadEvents(); // Opcional: también puedes listar desde el backend\n          }).catch(err => {\n            setError('Error al conectar con el microservicio');\n          });\n        });\n      });\n    }\n    gapi.load('client:auth2', start);\n  }, []);\n  const loadEvents = () => {\n    gapi.client.calendar.events.list({\n      calendarId: 'primary',\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      orderBy: 'startTime'\n    }).then(response => {\n      setEvents(response.result.items);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Eventos de Google Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(ev => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: ev.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 42\n        }, this), ev.start.dateTime || ev.start.date, \" \\u2192 \", ev.end.dateTime || ev.end.date]\n      }, ev.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleCalendar, \"x1Yh5or0Dkd1qx8VdFPykNLOoVk=\");\n_c = GoogleCalendar;\nexport default GoogleCalendar;\nvar _c;\n$RefreshReg$(_c, \"GoogleCalendar\");","map":{"version":3,"names":["React","useEffect","useState","gapi","jsxDEV","_jsxDEV","CLIENT_ID","API_KEY","SCOPES","GoogleCalendar","_s","events","setEvents","error","setError","start","client","init","apiKey","clientId","scope","discoveryDocs","then","auth2","getAuthInstance","signIn","googleUser","currentUser","get","accessToken","getAuthResponse","access_token","fetch","method","headers","body","JSON","stringify","token","loadEvents","catch","err","load","calendar","list","calendarId","timeMin","Date","toISOString","showDeleted","singleEvents","orderBy","response","result","items","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","map","ev","summary","dateTime","date","end","id","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/DEVNUBE/sports-platform/Frontend/admin-panel/src/pages/GoogleCalendar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { gapi } from 'gapi-script';\r\n\r\nconst CLIENT_ID = '591704407107-lh3mjl4c9t9co83akvrco6v7vlguq37s.apps.googleusercontent.com';\r\nconst API_KEY = 'AIzaSyDmvixL1GMLpRgba_hs1FMSSArB56LMjxc';\r\nconst SCOPES = 'https://www.googleapis.com/auth/calendar.events';\r\n\r\nfunction GoogleCalendar() {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    function start() {\r\n      gapi.client.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        scope: SCOPES,\r\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest']\r\n      }).then(() => {\r\n        gapi.auth2.getAuthInstance().signIn().then(() => {\r\n          const googleUser = gapi.auth2.getAuthInstance().currentUser.get();\r\n          const accessToken = googleUser.getAuthResponse().access_token;\r\n\r\n          // Enviar token al backend\r\n          fetch('http://localhost:3000/set-auth', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ token: accessToken })\r\n          })\r\n          .then(() => {\r\n            loadEvents(); // Opcional: también puedes listar desde el backend\r\n          })\r\n          .catch(err => {\r\n            setError('Error al conectar con el microservicio');\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    gapi.load('client:auth2', start);\r\n  }, []);\r\n\r\n  const loadEvents = () => {\r\n    gapi.client.calendar.events.list({\r\n      calendarId: 'primary',\r\n      timeMin: new Date().toISOString(),\r\n      showDeleted: false,\r\n      singleEvents: true,\r\n      orderBy: 'startTime'\r\n    }).then(response => {\r\n      setEvents(response.result.items);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h2>Eventos de Google Calendar</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul>\r\n        {events.map(ev => (\r\n          <li key={ev.id}>\r\n            <strong>{ev.summary}</strong><br />\r\n            {ev.start.dateTime || ev.start.date} → {ev.end.dateTime || ev.end.date}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}